interface PermissionRequest {
    type: string;
    origin?: string | null;
    payload: Record<string, any>;
}
declare type Origin = string | null | undefined;
export declare type GetPermissionFn = (req: PermissionRequest) => Promise<Array<string>> | null;
export declare const SELF_ORIGIN = "__IDW_ORIGIN";
export default class Permissions {
    protected getPermission: GetPermissionFn;
    did: string | null;
    constructor(getPermission: GetPermissionFn);
    setDID(did: string): void;
    request(origin: Origin, paths?: Array<string>): Promise<Array<string> | null>;
    has(origin: Origin, paths?: Array<string>): boolean;
    get(origin: Origin): Array<string> | null;
    set(origin: Origin, paths: Array<string> | null): void;
}
export {};
