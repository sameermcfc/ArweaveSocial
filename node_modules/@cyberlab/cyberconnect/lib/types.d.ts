import { solana } from '@ceramicnetwork/blockchain-utils-linking';
export interface Connection {
    connectionType: string;
    target: string;
    namespace: string;
    createdAt: string;
    alias: string;
}
export declare type Connections = Connection[];
export declare enum Blockchain {
    ETH = "ETH",
    SOLANA = "SOLANA"
}
export declare type SolananChainRef = typeof solana.SOLANA_DEVNET_CHAIN_REF | typeof solana.SOLANA_MAINNET_CHAIN_REF | typeof solana.SOLANA_TESTNET_CHAIN_REF;
export interface CyberConnetStore {
    outboundLink: Connections;
}
export interface ConfigBase {
    namespace: string;
    env?: keyof typeof Env;
    provider: any;
}
export interface ConfigEth {
    chain?: Blockchain.ETH;
    chainRef?: never;
}
export interface ConfigSolana {
    chain: Blockchain.SOLANA;
    chainRef: SolananChainRef;
}
export declare type Config = ConfigBase & (ConfigEth | ConfigSolana);
export declare enum Env {
    STAGING = "STAGING",
    PRODUCTION = "PRODUCTION"
}
export interface Endpoint {
    ceramicUrl: string;
    cyberConnectSchema: string;
    cyberConnectApi: string;
}
//# sourceMappingURL=types.d.ts.map