export declare type Query = 'connect' | 'disconnect';
export declare const connectQuerySchema: ({ fromAddr, toAddr, alias, namespace, signature, }: {
    fromAddr: string;
    toAddr: string;
    alias: string;
    namespace: string;
    signature: string;
}) => {
    operationName: string;
    query: string;
    variables: {};
};
export declare const disconnectQuerySchema: ({ fromAddr, toAddr, namespace, signature, }: {
    fromAddr: string;
    toAddr: string;
    namespace: string;
    signature: String;
}) => {
    operationName: string;
    query: string;
    variables: {};
};
export declare const setAliasQuerySchema: ({ fromAddr, toAddr, namespace, signature, alias, }: {
    fromAddr: string;
    toAddr: string;
    namespace: string;
    signature: string;
    alias: string;
}) => {
    operationName: string;
    query: string;
    variables: {};
};
export declare const querySchemas: {
    connect: ({ fromAddr, toAddr, alias, namespace, signature, }: {
        fromAddr: string;
        toAddr: string;
        alias: string;
        namespace: string;
        signature: string;
    }) => {
        operationName: string;
        query: string;
        variables: {};
    };
    disconnect: ({ fromAddr, toAddr, namespace, signature, }: {
        fromAddr: string;
        toAddr: string;
        namespace: string;
        signature: String;
    }) => {
        operationName: string;
        query: string;
        variables: {};
    };
    setAlias: ({ fromAddr, toAddr, namespace, signature, alias, }: {
        fromAddr: string;
        toAddr: string;
        namespace: string;
        signature: string;
        alias: string;
    }) => {
        operationName: string;
        query: string;
        variables: {};
    };
};
export declare const request: (url?: string, data?: {}) => Promise<any>;
export declare const handleQuery: (data: {
    query: string;
    variables: object;
    operationName: string;
}, url: string) => Promise<any>;
export declare const follow: ({ fromAddr, toAddr, alias, namespace, url, signature, }: {
    fromAddr: string;
    toAddr: string;
    alias: string;
    namespace: string;
    signature: string;
    url: string;
}) => Promise<any>;
export declare const unfollow: ({ fromAddr, toAddr, namespace, url, signature, }: {
    fromAddr: string;
    toAddr: string;
    namespace: string;
    signature: string;
    url: string;
}) => Promise<any>;
export declare const setAlias: ({ fromAddr, toAddr, alias, namespace, url, signature, }: {
    fromAddr: string;
    toAddr: string;
    alias: string;
    namespace: string;
    signature: string;
    url: string;
}) => Promise<any>;
//# sourceMappingURL=queries.d.ts.map